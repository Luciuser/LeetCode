856 题

class Solution {
public:
    int scoreOfParentheses(string s) {
        int leftNum = 1;
        int sum = 0;
        for(int i=1; i<s.size(); i++){
            if(s[i] == '('){
                leftNum++;
            }
            else{
                leftNum--;
                if(s[i-1] == '('){
                    sum += pow(2, leftNum);
                }
            }
        }

        return sum;
    }
};

1784 题

class Solution {
public:
    bool checkOnesSegment(string s) {
        int sum = 1;
        for(int i=1; i<s.size(); i++){
            if(s[i] == '1' && s[i-1] == '0'){
                return false;
            }
        }
        return true;
    }
};

1694 题

class Solution {
public:
    string reformatNumber(string number) {
        std::string temp = "";

        for(int i=0; i<number.size(); i++){
            if('0' <= number[i] && number[i] <= '9'){
                temp += number[i];
            }
        }

        std::string result = "";
        int i = 0;
        for(; i<temp.size(); i+=3){
            if( i+4 >= temp.size() ){
                break;
            }
            result += temp[i];
            result += temp[i + 1];
            result += temp[i + 2];
            result += "-";
        }

        int last = (int)(temp.size()) - i;
        switch(last){
            case 4:{
                result+=temp[i];
                result+=temp[i+1];
                result+='-';
                result+=temp[i+2];
                result+=temp[i+3];
                break;
            }
            case 3:{
                result+=temp[i];
                result+=temp[i+1];
                result+=temp[i+2];
                break;
            }
            case 2:{
                result+=temp[i];
                result+=temp[i+1];
                break;
            }
        }

        return result;
    }
};